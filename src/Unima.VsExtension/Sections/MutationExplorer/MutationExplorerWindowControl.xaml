<UserControl x:Class="Unima.VsExtension.Sections.MutationExplorer.MutationExplorerWindowControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
             xmlns:mvvm="http://prismlibrary.com/"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:codeDiff="clr-namespace:Unima.Wpf.Shared.CodeDiff;assembly=Unima.Wpf.Shared"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300"
             mvvm:ViewModelLocator.AutoWireViewModel="True"
             Name="MyToolWindow">
    <UserControl.Resources>
        <ResourceDictionary Source="/Unima.VsExtension;component/Resources.xaml" />
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="110" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="10" />
            <ColumnDefinition>
                <ColumnDefinition.Style>
                    <Style TargetType="ColumnDefinition">
                        <Setter Property="Width" Value="*" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsMutationVisible}" Value="False">
                                <Setter Property="Width" Value="0" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ColumnDefinition.Style>
            </ColumnDefinition>
        </Grid.ColumnDefinitions>

        <materialDesign:Card Margin="8, 16, 16, 8" Height="90" Grid.Row="0" Grid.Column="0" HorizontalAlignment="Left" IsEnabled="{Binding TestNotStarted}">
            <StackPanel Orientation="Horizontal">
                <Button Content="Run mutations" Command="{Binding RunMutationsCommand}" Margin="16, 0, 16, 0"/>
            </StackPanel>
        </materialDesign:Card>

        <materialDesign:Card Margin="8, 16, 8, 8" Height="90" Grid.Row="0" Grid.Column="0" HorizontalAlignment="Right" Width="250" Visibility="{Binding IsLoadingVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
            <StackPanel Orientation="Horizontal" Margin="25, 0, 0, 0">
                <ProgressBar
                    Style="{StaticResource MaterialDesignCircularProgressBar}"
                    IsIndeterminate="True"
                    Width="25"
                    Grid.Row="0"/>
                <Label Content="{Binding LoadingMessage}" FontSize="11" Foreground="White" HorizontalAlignment="Center" Margin="10, 24, 0, 0" Grid.Row="1"/>
            </StackPanel>
        </materialDesign:Card>

        <Grid Grid.Row="1" Grid.Column="0">
            <GroupBox
                Header="Mutations"
                Style="{DynamicResource MaterialDesignCardGroupBox}"
                Margin="16">
                <ScrollViewer>
                    <DataGrid
                        SelectionUnit="FullRow"
                        AutoGenerateColumns="False"
                        IsReadOnly="False"
                        ItemsSource="{Binding Mutations}"
                        CanUserAddRows="false"
                        Grid.Row="1">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDoubleClick">
                                <i:InvokeCommandAction Command="{Binding MutationSelectedCommand}" CommandParameter="{Binding Path=SelectedItem, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}" x:Name="Dummy" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="File" Binding="{Binding Document.FileName}" Width="*" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Where" Binding="{Binding Document.MutationDetails.Location.Where}" Width="*" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Line" Binding="{Binding Document.MutationDetails.Location.Line}" Width="*" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Status" Binding="{Binding Status}" Width="*" IsReadOnly="True"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </ScrollViewer>
            </GroupBox>
        </Grid>
        <Button Grid.Row="1" Grid.Column="1" Content="&lt;" Command="{Binding ToggleMutation}" />
        <Grid Grid.Column="2" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <GroupBox
                Header="Before mutation"
                Style="{DynamicResource MaterialDesignCardGroupBox}"
                Grid.Row="0"
                Margin="16">
                <RichTextBox x:Name="BeforeTxt"
                             ScrollViewer.ScrollChanged="OnScrollChanged"
                             codeDiff:SideBySideDiffModelVisualizer.Vorher="{Binding Diff, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" FontFamily="Consolas" AcceptsReturn="True" IsReadOnly="True" 
                             VerticalScrollBarVisibility="Visible"/>
            </GroupBox>
            <GroupBox
                Header="After mutation"
                Style="{DynamicResource MaterialDesignCardGroupBox}"
                Margin="16"
                Grid.Row="1">
                <RichTextBox x:Name="AfterTxt"
                             ScrollViewer.ScrollChanged="OnScrollChanged"
                             codeDiff:SideBySideDiffModelVisualizer.Nachher="{Binding Diff, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" FontFamily="Consolas" AcceptsReturn="True" IsReadOnly="True" 
                             VerticalScrollBarVisibility="Visible"/>
            </GroupBox>

        </Grid>
    </Grid>
</UserControl>
